name: APK Release CI

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Stable release tags (e.g., 1.2.3)
      - 'PR-[a-f0-9]{7}'        # Pre-release tags with 7-char commit SHA (e.g., PR-abc1234)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    outputs:
      release_sha: ${{ steps.prepare_artifact.outputs.release_sha }}
      short_sha: ${{ steps.prepare_artifact.outputs.short_sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Android SDK
        run: ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Assemble release APK
        uses: gradle/gradle-command-action@v2
        with:
          arguments: :app:assembleRelease
      - name: Prepare release artifact
        id: prepare_artifact
        run: |
          mv app/build/outputs/apk/release/app-release-unsigned.apk flixclusive-release.apk
          echo "release_sha=$(sha256sum flixclusive-release.apk | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: flixclusive-release.apk

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk

      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Generate changelogs
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.previousTag || 'HEAD' }}
          excludeTypes: ${{ !startsWith(github.ref, 'refs/tags/PR-') && 'build,docs,other,style' || '' }}
          writeToFile: false

      - name: Manage pre-release
        if: startsWith(github.ref, 'refs/tags/PR-')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Attempting to delete pre-release tag..."
    
          git tag -d pre-release || echo "Local tag 'pre-release' does not exist."
          git push origin :refs/tags/pre-release || echo "Remote tag 'pre-release' does not exist."
          
          CLEANED_CHANGES=$(echo '${{ steps.changelog.outputs.changes }}' | sed 's/`/`/g')
    
          echo "Creating new pre-release..."
          gh release delete pre-release --yes || echo "Failed to delete last pre-release."
          gh release create pre-release \
            --title "${{ github.ref_name }}" \
            --notes "$(cat << EOF
          ##### _NOTE: Android TV is incomplete, the providers on this port are not yet installable. Though, you could test it now._

          ---

          ### 🐞 Known issues
          - TV focus crashes. Compose TV is bugged af; we wait til the new update.

          ${CLEANED_CHANGES}
          ---

          ### Checksums

          | Variant | SHA-256 |
          | ------- | ------- |
          | release | ${{ needs.build.outputs.release_sha }} |
          EOF
          )" \
            --prerelease \
            flixclusive-release.apk

      - name: Manage stable release
        if: "!startsWith(github.ref, 'refs/tags/PR-')"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete ${{ github.ref_name }} --yes || echo "Failed to delete ${{ github.ref_name }} release."
          
          CLEANED_CHANGES=$(echo '${{ steps.changelog.outputs.changes }}' | sed 's/`/`/g')
          
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }}" \
            --notes "$(cat << EOF
          ##### _NOTE: Android TV is incomplete, the providers on this port are not yet installable. Though, you could test it now._

          ---

          ### 🐞 Known issues
          - TV focus crashes. Compose TV is bugged af; we wait til the new update.

          ${CLEANED_CHANGES}
          ---

          ### Checksums

          | Variant | SHA-256 |
          | ------- | ------- |
          | release | ${{ needs.build.outputs.release_sha }} |
          EOF
          )" \
            flixclusive-release.apk



  archive:
    name: Archive APK
    needs: [build, release]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Generate access token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            apk-archive

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout archive repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/apk-archive
          token: ${{ steps.generate_token.outputs.token }}
          path: "apk-archive"

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk

      - name: Archive pre-release APK
        run: |
          chmod +x .github/parse_version.sh
          version=$(.github/parse_version.sh)
          archive_dir="$GITHUB_WORKSPACE/apk-archive/$version"
          mkdir -p "$archive_dir"
          cp flixclusive-release.apk "$archive_dir/PR-${{ needs.build.outputs.short_sha }} $(date +'%Y-%m-%d %H:%M:%S').apk"
          cd $GITHUB_WORKSPACE/apk-archive
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Archive $(date +'%Y-%m-%d') [flixclusiveorg/Flixclusive@${GITHUB_SHA}]" || true
          git push
